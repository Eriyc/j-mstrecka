name: Wails build

on:
  push:
    tags:
      # Match any new tag
      - "*"

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
      # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
          - name: "jamstrecka-amd64"
            platform: "linux/amd64"
            os: "ubuntu-latest"
            go: 1.23

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: oven-sh/setup-bun@v2

      - name: Install linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update -y && sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev javascriptcoregtk-4.1-dev build-essential pkg-config

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache-dependency-path: "v3/go.sum"

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v3/cmd/wails3@latest

      - uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Linux
        if: matrix.build.platform == 'linux/amd64'
        run: task package:linux
        env:
          CGO_ENABLED: 1
          GOARCH: amd64
          GOOS: linux

      - name: Build MacOS
        if: matrix.build.platform == 'darwin/amd64'
        run: task package:darwin
        env:
          CGO_ENABLED: 1
          GOARCH: amd64
          GOOS: darwin

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          asset_content_type: "application/octet-stream"
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/bin/${{ matrix.build.name }}
          asset_name: ${{ matrix.build.name }}
